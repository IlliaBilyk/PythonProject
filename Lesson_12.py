#Методи списків

# print(dir([1,2,3]))

l_1 = [1, 2, 3, 1, 777]
l_2 = [1, 777, 999]

# l_1.append(555) #додає значення у кінець списку
# print(l_1) #[1, 2, 3, 1, 777, 555]
#
# l_1.append(l_2)
# print(l_1) #[1, 2, 3, 1, 777, 555, [1, 777, 999]]

# l_1.extend(l_2) #вставляє список в кінець списоку і розпаковує його
# print(l_1) #[1, 2, 3, 1, 777, 1, 777, 999]

# l_1.insert(1, 345) #Додає значення в список + можна вибрати місце в списку, куди саме додає
# print(l_1)

# print(l_1.count(1)) #Передає кількість входжень переданого Вами елементу #2

# print(l_1.index(777)) #Передає індекс в списку вибраного мною елементу. Якщо таких елементів декілька - поверне перший зліва #4

# l_1.reverse() #Міняє порядок відображення елементів списку, останній стає першим
# print(l_1) #[777, 1, 3, 2, 1]

# l_1.pop() #Видаляє елемент списку. За замовчуванням - видаляє останній
# print(l_1) #[1, 2, 3, 1]

# del_element = l_1.pop() #pop - зберігає видалений елементі його потім можна буде вивести
# print(del_element) #777

# l_1.remove(777) #Видаляє не за індексом, а за значенням. Якщо таких елементів декілька, то видалитсья перший зліва.
# print(l_1)

# new_list = l_1.copy() #or l_1[::]  #Копіювати список, але айді нового списку буде інше, щоб новий список можна було редагувати без страху, що видалиться щось в першому. Але це працює тільки для лінійних списків. Для списків з вкладеними списками краще користуватись .deepcopy
# print(id(new_list)) #2292147256064
# print(id(l_1)) #2292145624320

# l_1.sort() #Сортує список, за замовчуванням - від меньшого до більшого
# print(l_1) #[1, 1, 2, 3, 777]

# l_3 = ["apple", "tea", "bread", "python", "lemon"]
# l_3.sort(key=len, reverse=True) #сортує слова по кількості символів від меньшого до більшого, з реверсом навпаки - від більшого до меньшого
# print(l_3) #['python', 'apple', 'bread', 'lemon', 'tea']

# l_1.clear() #Очищує список
# print(l_1) #[]
